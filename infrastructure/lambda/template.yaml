AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  SecretName:
    Type: String
    Description: Secrets Manager secret name for Redshift username/password
  RedshiftHost:
    Type: String
    Description: Redshift cluster endpoint
  RedshiftDB:
    Type: String
    Default: dev
  S3BucketName:
    Type: String
    Description: S3 bucket for backups

Resources:
  RedshiftDataAPI:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Timeout: 300
      Environment:
        Variables:
          SECRET_NAME: !Ref SecretName
          REDSHIFT_HOST: !Ref RedshiftHost
          REDSHIFT_DB: !Ref RedshiftDB
          S3_BUCKET: !Ref S3BucketName
      Policies:
        - S3FullAccessPolicy:
            BucketName: !Ref S3BucketName
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*'
            - Effect: Allow
              Action:
                - redshift-data:ExecuteStatement
                - redshift-data:DescribeStatement
                - redshift-data:GetStatementResult
              Resource: '*'
            - Effect: Allow
              Action:
                - redshift:GetClusterCredentials
                - redshift:DescribeClusters
              Resource: '*'
      Events:
        InsertData:
          Type: Api
          Properties:
            Path: /data/{table}
            Method: post
        BackupTable:
          Type: Api
          Properties:
            Path: /backup/{table}
            Method: post
        RestoreTable:
          Type: Api
          Properties:
            Path: /restore/{table}
            Method: post
        ExecuteSQL:
          Type: Api
          Properties:
            Path: /sql
            Method: post
        QuarterlyReport:
          Type: Api
          Properties:
            Path: /reports/quarterly_hiring_report/{year}
            Method: get
        DepartmentReport:
          Type: Api
          Properties:
            Path: /reports/departments_above_avg_hiring/{year}
            Method: get

  BackupBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Ref S3BucketName
      VersioningConfiguration:
        Status: Enabled

Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
